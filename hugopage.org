#+hugo_base_dir: ~/fun/myblog/
* A goddam blog
  :PROPERTIES:
  :EXPORT_HUGO_SECTION:
  :END:
  
** posts
   :PROPERTIES:
   :EXPORT_HUGO_SECTION: posts
   :END:
   
*** posts
    :PROPERTIES:
    :EXPORT_FILE_NAME: _index
    :END:
    These are the posts I'll be posting on my blog
    
*** One bad night
    :PROPERTIES:
    :EXPORT_FILE_NAME: bad-night
    :END:
   
    Someone is here... I think!
   
*** Another bad night
    :PROPERTIES:
    :EXPORT_FILE_NAME: another
    :END:
    
    Yet another bad night! How unfortunate
    
** thoughts
   :PROPERTIES:
   :EXPORT_HUGO_SECTION: thoughts
   :END:
   
*** thoughts
    :PROPERTIES:
    :EXPORT_FILE_NAME: _index
    :END:
    
**** This section  is devoted to the various type of thoughts I can have.
     I once started doing meditation. That's when I realized...
     I sure do have a lot of thoughts. After a while of consciously listening
     to my thoughts, I saw there were some repeating patterns. So here I have decided to 
     demonstrate (one possible, and possibly wrong) taxonomy of thoughts.
   
*** Forward-Fake memories
    :PROPERTIES:
    :EXPORT_FILE_NAME: memories
    :END:
     
    These are memories (or, possible future scenarios)
    which have not happened yet. For another topic see [[*Backward-Fake memories]]

*** Backward-Fake memories
    :PROPERTIES:
    :EXPORT_FILE_NAME: backwards-memories
    :END:
    
    Opposite to [[*Forward-Fake memories]], backward fake memories imagine strange
    scenarios that /could have happened in the past/ but didn't. 
** TIL
   :PROPERTIES:
   :EXPORT_HUGO_SECTION: TIL
   :END:
   
*** TIL
    :PROPERTIES:
    :EXPORT_FILE_NAME: _index
    :TOC: true
    :END:
    
**** Today-I-learned
     These are little shortform learnings... we learn a little
     everyday :)
   
*** sizeof() is a macro, or, how does one understand hello world?
    :PROPERTIES:
    :EXPORT_FILE_NAME: sizeof-is-a-macro
    :END:

   
****  Hello, bit sizes? 
     I remember one of the assignments (in fact,
     literally the /first/ assignment at my university ever - we skipped
     "hello world" for some reason)
     was to print the bit sizes of various types. So, after much pain, we went ahead and
     wrote 
    
     #+begin_src C
     #include<stdio.h>
     int main() {
       printf("An int is %d bits long \n", sizeof(int));
       printf("And float is %d bits long \n", sizeof(float));
       printf("And char is %d bits long \n", sizeof(char));
     }
     #+end_src

     and after learning (in the most basic sense) how to use =gcc=, we got out
     
     #+begin_src 
     An int is 4 bits long
     And float is 4 bits long
     And  char is 1 bits long
     #+end_src

     Afterwards, we learnt about functions. And I even wrote my
     *own* function! Of course, since I am a prodigy of programming
     it took my no time to create this absolute beauty:
     #+begin_src C
      #include<stdio.h>
      int soWhenDoWeGetGirlfriends(int number) {
        return number + 3;
      }
      int main(){
        printf("%d\n", soWhenDoWeGetGirlfriends(3));
      }
     #+end_src

     #+attr_quote: 
     : 6

     Ah so that's pretty easy. I guess =printf= and =sizeof= are two
     other functions that some old guys wrote. Something with that =main= 
     function was also important. Well, here I am, totally
     on their level since I've also written /my/ function.
    
     It wasn't until embarassingly later that I realized that *none* of those
     functions are like each other.
   
****  Breaking it down
     
     Let's start with the abomination which was my function.
     This is a standard function. Strict return type, strict input, strict computer science professors.
     If I wrote =soWhenDoWeGetGirlfriends(4, "please");=, my compiler would throw error,
     my lower palm would make an impact with my forehead, and I'd start again.

     
    
     Next, let's look at the =printf=. This is just some function defined in
     =stdio.h=, right? Well actually, and I'm not sure how I didn't notice this
     despite using =printf= every single time I used C, that it can take a *variable* amount
     of arguments. 
     
     I mean, duh, of course it can. I've been putting a random amount of floats, ints,
     and chars all the time. Yet, for some reason, I decided "yep that's normal, and I
     will never try to create a function with variable parameters myself, because that
     is impossible and has never been done before. Now I will =printf= debug this code."

     <article>
     Something
     </article>
